{"version":3,"file":"index.mjs","sources":["../src/pixel-unit-regexp.ts","../src/prop-list-matcher.ts","../src/utils.ts","../src/index.ts"],"sourcesContent":["export function getUnitRegexp(unit: string) {\r\n  return new RegExp(`\"[^\"]+\"|'[^']+'|url\\\\([^\\\\)]+\\\\)|(\\\\d*\\\\.?\\\\d+)${unit}`, 'g');\r\n}\r\n\r\nexport function isInCalcOrVar(value: string): boolean {\r\n  return /(?:calc|var|max|min|clamp)\\(/.test(value);\r\n}\r\n","export const filterPropList = {\r\n  exact(list: string[]) {\r\n    return list.filter((m: string) => {\r\n      return m.match(/^[^\\*\\!]+$/)\r\n    })\r\n  },\r\n  contain(list: string[]) {\r\n    return list\r\n      .filter((m) => {\r\n        return m.match(/^\\*.+\\*$/)\r\n      })\r\n      .map((m) => {\r\n        return m.substr(1, m.length - 2)\r\n      })\r\n  },\r\n  endWith(list: string[]) {\r\n    return list\r\n      .filter((m) => {\r\n        return m.match(/^\\*[^\\*]+$/)\r\n      })\r\n      .map((m) => {\r\n        return m.substr(1)\r\n      })\r\n  },\r\n  startWith(list: string[]) {\r\n    return list\r\n      .filter((m) => {\r\n        return m.match(/^[^\\*\\!]+\\*$/)\r\n      })\r\n      .map((m) => {\r\n        return m.substr(0, m.length - 1)\r\n      })\r\n  },\r\n  notExact(list: string[]) {\r\n    return list\r\n      .filter((m) => {\r\n        return m.match(/^\\![^\\*].*$/)\r\n      })\r\n      .map((m) => {\r\n        return m.substr(1)\r\n      })\r\n  },\r\n  notContain(list: string[]) {\r\n    return list\r\n      .filter((m) => {\r\n        return m.match(/^\\!\\*.+\\*$/)\r\n      })\r\n      .map((m) => {\r\n        return m.substr(2, m.length - 3)\r\n      })\r\n  },\r\n  notEndWith(list: string[]) {\r\n    return list\r\n      .filter((m) => {\r\n        return m.match(/^\\!\\*[^\\*]+$/)\r\n      })\r\n      .map((m) => {\r\n        return m.substr(2)\r\n      })\r\n  },\r\n  notStartWith(list: string[]) {\r\n    return list\r\n      .filter((m) => {\r\n        return m.match(/^\\![^\\*]+\\*$/)\r\n      })\r\n      .map((m) => {\r\n        return m.substr(1, m.length - 2)\r\n      })\r\n  }\r\n}\r\n\r\nexport const createPropListMatcher = (propList: string[]) => {\r\n  const hasWild = propList.indexOf('*') > -1\r\n  const matchAll = hasWild && propList.length === 1\r\n  const lists = {\r\n    exact: filterPropList.exact(propList),\r\n    contain: filterPropList.contain(propList),\r\n    startWith: filterPropList.startWith(propList),\r\n    endWith: filterPropList.endWith(propList),\r\n    notExact: filterPropList.notExact(propList),\r\n    notContain: filterPropList.notContain(propList),\r\n    notStartWith: filterPropList.notStartWith(propList),\r\n    notEndWith: filterPropList.notEndWith(propList)\r\n  }\r\n  return function (prop: string) {\r\n    if (matchAll) return true\r\n    return (\r\n      (hasWild ||\r\n        lists.exact.indexOf(prop) > -1 ||\r\n        lists.contain.some((m) => {\r\n          return prop.indexOf(m) > -1\r\n        }) ||\r\n        lists.startWith.some((m) => {\r\n          return prop.indexOf(m) === 0\r\n        }) ||\r\n        lists.endWith.some((m) => {\r\n          return prop.indexOf(m) === prop.length - m.length\r\n        })) &&\r\n      !(\r\n        lists.notExact.indexOf(prop) > -1 ||\r\n        lists.notContain.some((m) => {\r\n          return prop.indexOf(m) > -1\r\n        }) ||\r\n        lists.notStartWith.some((m) => {\r\n          return prop.indexOf(m) === 0\r\n        }) ||\r\n        lists.notEndWith.some((m) => {\r\n          return prop.indexOf(m) === prop.length - m.length\r\n        })\r\n      )\r\n    )\r\n  }\r\n}\r\n","import type { OptionType, ParentExtendType } from './types';\r\n\r\nexport const getUnit = (prop: string | string[], opts: OptionType) => {\r\n  return prop.indexOf('font') === -1 ? opts.viewportUnit : opts.fontViewportUnit;\r\n};\r\n\r\n/**\r\n * 转换\r\n * e.g. 将 px 转换为 vw\r\n * @param opts \r\n * @param viewportUnit \r\n * @param viewportSize \r\n * @returns \r\n */\r\nexport const createPxReplace = (\r\n  opts: OptionType,\r\n  viewportUnit: string | number,\r\n  viewportSize: number,\r\n  force?: boolean\r\n) => {\r\n  return function (m: any, $1: string) {\r\n    if (!$1) return m;\r\n    const pixels = parseFloat($1);\r\n    if (pixels <= opts.minPixelValue! && !force) return m;\r\n    const parsedVal = toFixed((pixels / viewportSize) * 100, opts.unitPrecision!);\r\n    return parsedVal === 0 ? '0' : `${parsedVal}${viewportUnit}`;\r\n  };\r\n};\r\n\r\nexport const toFixed = (number: number, precision: number) => {\r\n  const multiplier = Math.pow(10, precision + 1);\r\n  const wholeNumber = Math.floor(number * multiplier);\r\n  return (Math.round(wholeNumber / 10) * 10) / multiplier;\r\n};\r\n\r\nexport const blacklistedSelector = (blacklist:  (RegExp | string)[], selector: string) => {\r\n  if (typeof selector !== 'string') return;\r\n  return blacklist.some((regex) => {\r\n    if (typeof regex === 'string') return selector.indexOf(regex) !== -1;\r\n    return selector.match(regex);\r\n  });\r\n};\r\n\r\n/**\r\n * 判断声明数组中是否存在具有指定属性名和属性值\r\n * @param decls \r\n * @param prop \r\n * @param value \r\n * @returns \r\n */\r\nexport const declarationExists = (decls: ParentExtendType[], prop: string, value: string) => {\r\n  return decls?.some((decl: ParentExtendType) => {\r\n    return decl.prop === prop && decl.value === value;\r\n  });\r\n};\r\n\r\nexport const validateParams = (params: string, mediaQuery: boolean) => {\r\n  return !params || (params && mediaQuery);\r\n};\r\n\r\nexport const getWidth = (widthOption: number | ((filePath: string) => number | undefined), file: any) => {\r\n  return typeof widthOption == 'function' ? widthOption(file) : widthOption\r\n}","import { AtRule, Declaration, Helpers, Root } from 'postcss';\r\nimport { getUnitRegexp, isInCalcOrVar } from './pixel-unit-regexp';\r\nimport { createPropListMatcher } from './prop-list-matcher';\r\nimport { OptionType, ParentExtendType, RuleType } from './types';\r\nimport { blacklistedSelector, createPxReplace, declarationExists, getUnit, getWidth, validateParams } from './utils';\r\n\r\nconst pluginName = 'postcss-px-to-vw-device';\r\n\r\nconst defaults: Required<Omit<OptionType, 'exclude' | 'include'>> = {\r\n  unitToConvert: 'px',\r\n  viewportUnit: 'vw',\r\n  viewportWidth: 370,\r\n  viewportHeight: 568,\r\n  fontViewportUnit: 'vw',\r\n  enable: true,\r\n  minPixelValue: 1,\r\n  unitPrecision: 6,\r\n  selectorBlackList: [],\r\n  propList: ['*'],\r\n  replace: true,\r\n  mediaQuery: false,\r\n  mediaOptions: [],\r\n};\r\n\r\nconst ignoreNextComment = 'px-to-viewport-ignore-next';\r\nconst ignorePrevComment = 'px-to-viewport-ignore';\r\n\r\nconst postcssPxToViewport = (options?: OptionType) => {\r\n  const opts = Object.assign({}, defaults, options);\r\n\r\n  const pxRegex = getUnitRegexp(opts.unitToConvert);\r\n  const satisfyPropList = createPropListMatcher(opts.propList);\r\n  let landscapeRules: AtRule[] = [];\r\n  let mediaRules: Array<{\r\n    mediaParam: string;\r\n    rules: AtRule[];\r\n  }> = [];\r\n\r\n  return {\r\n    postcssPlugin: pluginName,\r\n    Once(css: Root, { result }: Helpers) {\r\n      // @ts-ignore\r\n      css.walkRules((rule: RuleType) => {\r\n        const file = rule.source?.input.file || '';\r\n\r\n        // 排除 include 配置之外的文件，不进行转换\r\n        if (opts.include && file) {\r\n          if (Object.prototype.toString.call(opts.include) === '[object RegExp]') {\r\n            if (!(opts.include as RegExp).test(file)) return;\r\n          } else if (opts.include instanceof Array) {\r\n            let flag = false;\r\n            for (let i = 0; i < opts.include.length; i++) {\r\n              if (opts.include[i].test(file)) {\r\n                flag = true;\r\n                break;\r\n              }\r\n            }\r\n            if (!flag) return;\r\n          }\r\n        }\r\n\r\n        // 排除 exclude 配置的文件，不进行转换\r\n        if (opts.exclude && file) {\r\n          if (Object.prototype.toString.call(opts.exclude) === '[object RegExp]') {\r\n            if ((opts.exclude as RegExp).test(file)) return;\r\n          } else if (opts.exclude instanceof Array) {\r\n            for (let i = 0; i < opts.exclude.length; i++) {\r\n              if (opts.exclude[i].test(file)) return;\r\n            }\r\n          } else {\r\n            throw new Error('options.exclude should be RegExp or Array.');\r\n          }\r\n        }\r\n\r\n        // 排除 selectorBlackList 配置的黑名单选择器，不进行转换\r\n        if (blacklistedSelector(opts.selectorBlackList, rule.selector)) return;\r\n\r\n        // 添加媒体查询，不同尺寸设备使用不同的 viewportWidth 基准值进行转换\r\n        if (opts.mediaOptions?.length && !rule.parent?.params) {\r\n          const mediaOptions = opts.mediaOptions.filter((item) => (typeof item.enable === 'boolean' ? item.enable : opts.enable ?? false));\r\n          for (let i = 0; i < mediaOptions.length; i++) {\r\n            const {\r\n              viewportWidth = opts.viewportWidth,\r\n              unitToConvert = opts.unitToConvert,\r\n              viewportUnit = opts.viewportUnit,\r\n              fontViewportUnit = opts.fontViewportUnit,\r\n              mediaParam,\r\n            } = mediaOptions[i];\r\n\r\n            const mediaRule = rule.clone().removeAll();\r\n            rule.walkDecls((decl: Declaration) => {\r\n              if (decl.value.indexOf(unitToConvert) === -1) return;\r\n              if (!satisfyPropList(decl.prop)) return;\r\n\r\n              const width = getWidth(viewportWidth!, file);\r\n              if (!width) return;\r\n              const unit = getUnit(decl.prop, { ...opts, viewportUnit, fontViewportUnit });\r\n\r\n              mediaRule.append(\r\n                decl.clone({\r\n                  value: decl.value.replace(pxRegex, createPxReplace(opts, unit!, width, isInCalcOrVar(decl.value))),\r\n                }),\r\n              );\r\n            });\r\n\r\n            if (mediaRule.nodes.length > 0) {\r\n              if (!mediaRules[i]) {\r\n                mediaRules[i] = {\r\n                  mediaParam,\r\n                  rules: [],\r\n                };\r\n              }\r\n              mediaRules[i].rules.push(mediaRule as unknown as AtRule);\r\n            }\r\n          }\r\n        }\r\n\r\n        // 是否排除媒体查询的转换\r\n        if (!validateParams(rule.parent?.params, opts.mediaQuery)) return;\r\n\r\n        // 遍历转换\r\n        rule.walkDecls((decl, i) => {\r\n          // 未开启，不进行转换\r\n          if (!opts.enable) return;\r\n          // 非目标单位，不进行转换\r\n          if (decl.value.indexOf(opts.unitToConvert) === -1) return;\r\n          // 非 propList 中的属性，不进行转换\r\n          if (!satisfyPropList(decl.prop)) return;\r\n\r\n          // 属性前注释了 ignoreNextComment, 不进行转换\r\n          const prev = decl.prev();\r\n          if (prev && prev.type === 'comment' && prev.text === ignoreNextComment) {\r\n            prev.remove();\r\n            return;\r\n          }\r\n\r\n          // 属性后注释了 ignorePrevComment, 不进行转换\r\n          const next = decl.next();\r\n          if (next && next.type === 'comment' && next.text === ignorePrevComment) {\r\n            if (next?.raws?.before && /\\n/.test(next.raws.before)) {\r\n              result.warn('Unexpected comment /* ' + ignorePrevComment + ' */ must be after declaration at same line.', { node: next });\r\n            } else {\r\n              next.remove();\r\n              return;\r\n            }\r\n          }\r\n\r\n          let unit; // 转换后的单位\r\n          let size; // 转换的基准值\r\n          const { params } = rule.parent;\r\n\r\n          // 获取转换单位和转换的基准值\r\n          if (params && params.indexOf('landscape') !== -1) {\r\n            return;\r\n          } else {\r\n            unit = getUnit(decl.prop, opts);\r\n            const num = getWidth(opts.viewportWidth, file);\r\n            if (!num) return;\r\n            size = num;\r\n          }\r\n\r\n          // 计算并得到转换后的值\r\n          const value = decl.value.replace(pxRegex, createPxReplace(opts, unit!, size, isInCalcOrVar(decl.value)));\r\n\r\n          // 如果已经转换过则不替换\r\n          if (declarationExists(decl.parent as unknown as ParentExtendType[], decl.prop, value)) return;\r\n\r\n          // 替换转换后的值\r\n          if (opts.replace) {\r\n            decl.value = value;\r\n          } else {\r\n            decl.parent?.insertAfter(i, decl.clone({ value }));\r\n          }\r\n        });\r\n      });\r\n    },\r\n    OnceExit(css: Root, { AtRule }: Helpers) {\r\n      if (landscapeRules.length > 0) {\r\n        const landscapeRoot = new AtRule({\r\n          params: '(orientation: landscape)',\r\n          name: 'media',\r\n        });\r\n        landscapeRules.forEach(function (rule) {\r\n          landscapeRoot.append(rule);\r\n        });\r\n        css.append(landscapeRoot);\r\n        landscapeRules = [];\r\n      }\r\n\r\n      if (mediaRules.length > 0) {\r\n        for (let i = 0; i < mediaRules.length; i++) {\r\n          let item = mediaRules[i];\r\n          let { mediaParam, rules } = item;\r\n          const mediaRoot = new AtRule({\r\n            params: mediaParam,\r\n            name: 'media',\r\n          });\r\n          rules.forEach(function (rule) {\r\n            mediaRoot.append(rule);\r\n          });\r\n          css.append(mediaRoot);\r\n        }\r\n        mediaRules = [];\r\n      }\r\n    },\r\n  };\r\n};\r\n\r\npostcssPxToViewport.postcss = true;\r\nmodule.exports = postcssPxToViewport;\r\nexport default postcssPxToViewport;\r\n"],"names":["isInCalcOrVar","value","test","filterPropList","exact","list","filter","m","match","contain","map","substr","length","endWith","startWith","notExact","notContain","notEndWith","notStartWith","getUnit","prop","opts","indexOf","viewportUnit","fontViewportUnit","createPxReplace","viewportSize","force","$1","pixels","parseFloat","minPixelValue","parsedVal","toFixed","unitPrecision","number","precision","multiplier","Math","pow","wholeNumber","floor","round","getWidth","widthOption","file","defaults","unitToConvert","viewportWidth","viewportHeight","enable","selectorBlackList","propList","replace","mediaQuery","mediaOptions","ignorePrevComment","postcssPxToViewport","options","Object","assign","pxRegex","unit","RegExp","satisfyPropList","hasWild","matchAll","lists","some","createPropListMatcher","landscapeRules","mediaRules","postcssPlugin","Once","css","result","walkRules","rule","source","input","include","prototype","toString","call","Array","flag","i","exclude","Error","blacklist","selector","regex","blacklistedSelector","parent","params","item","mediaParam","mediaRule","clone","removeAll","walkDecls","decl","width","append","nodes","rules","push","prev","type","text","remove","next","raws","before","warn","node","size","num","decls","declarationExists","insertAfter","OnceExit","AtRule","landscapeRoot","name","forEach","mediaRoot","postcss","module","exports"],"mappings":"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"}